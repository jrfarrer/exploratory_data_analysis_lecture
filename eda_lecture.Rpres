<div class="footer" style="margin-top;">Intro to EDA: <a target="_blank" href = "bit.ly/stats_eda">bit.ly/stats_eda</a></div>
Exploratory Data Analysis
========================================================
author: Jordan Farrer
date: 2016-01-19
autosize: true
transition: rotate
css: jrf_style.css

```{r setup, include=FALSE}
# Set options for the rmarkdown file
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, fig.width = 11, fig.height = 6.5, fig.align = 'center', width = 200, cache = FALSE)
```

Agenda
========================================================

1. Role of EDA
2. tidyverse Fundamentals
3. EDA Examples

Role of EDA
====================================
type: sub-section

Data Analyis Lifecycle
========================================================

<center>![](http://r4ds.had.co.nz/diagrams/data-science-explore.png)</center>

What is EDA?
========================================================

**Exporatory Data Analysis** : ask questions, uncover facets of your data, but no conclusive results

- Objective: know your data inside and out
- There is no right way
- It's a **creative process**
- Better questions = better understanding

Balancing Act
========================================================
left:40%

Data Integrity vs Intricate Questions

![](http://productinnovationnow.com/wp-content/uploads/2013/06/Balance-Freedom-and-Control.jpg)
***
|Role|Description|
|---|:---:|
|Consulting Manager|Focused on data integrity (CYA)|
|Statistician|Jumps to complex, intricate questions|
|Data Scientist|Balances both|

Roadmap of Questions
========================================================

1. Data Integrity
  + Record counts
  + Missing values
  + Unusual values
2. Intricate Questions
  + Variation
  + Covariation
      + Two Continuous Variables
      + One Continuous and One Categorical
      + Two Categorial
  + Patterns
  
  
tidyverse Fundemenals
====================================
type: sub-section


tidyverse
========================================================

```{r}
library(tidyverse)
```

<center>![](./viz/tidyverse.png)</center>

[tidyverse](https://github.com/tidyverse/tidyverse) is a collection of R packages that share common philosophies and are designed to work together

- created mostly by Hadley Wickam (R-God) and maintained by RStudio

R-God
========================================================

<center>![](https://pix-media.priceonomics-media.com/blog/1001/HadleyObama.png)</center>

Packages Discussed Today
========================================================

**dplyr** : data manipulation

**ggplot2** : grammar of graphics

dplyr
========================================================


Set of simple *"verbs"* - functions that correspond to the most common data manipulation tasks 
- help you translate those thoughts into code
- purposefully constrains your options
- creates readable code (no guessing why you're doing that)

The Verbs
========================================================

|dplyr verb|SQL equivalent|Action|
|---|---|---|
|`filter()`|WHERE|Limit based on condition|
|`select()`|SELECT|Choose only certain variables|
|`distinct()`|DISTINCT|De-duplicate result-set|
|`arrange()`|ORDER BY|Order results|
|`rename()`|SELECT|Rename variables|
|`mutate()`|SELECT|Create new varaiable|
|`group_by()`|GROUP BY |Group rows|
|`summarise()`|SELECT|Create new variable in grouped setting|

Flights Data
========================================================

```{r}
library(nycflights13)

flights
```

Dataset
- 336,776 flights that departed from New York City in 2013
- From the [US Bureau of Transportation Statistics](http://www.transtats.bts.gov/DatabaseInfo.asp?DB_ID=120&Link=0)

filter - 1
========================================================

```{r}
flights %>%
  filter(month == 1 &  day == 1)
```


filter - 2
========================================================

```{r}
flights %>%
  filter(dest %in% c("PHL","SLC") & month <= 6)
```

select
========================================================

```{r}
flights %>%
  filter(dest %in% c("PHL","SLC") & month <= 6) %>%
  select(origin, dest, carrier)
```


distinct
========================================================

```{r}
flights %>%
  filter(dest %in% c("PHL","SLC") & month <= 6) %>%
  select(origin, dest, carrier) %>% 
  distinct()
```

arrange
========================================================

```{r}
flights %>%
  filter(dest %in% c("PHL","SLC") & month <= 6) %>%
  select(origin, dest, carrier) %>% 
  distinct() %>%
  arrange(origin, desc(dest), carrier)
```

rename
========================================================

```{r}
flights %>%
  filter(dest %in% c("PHL","SLC") & month <= 6) %>%
  select(origin, dest, carrier) %>% 
  distinct() %>%
  arrange(origin, desc(dest), carrier) %>%
  rename(airline = carrier)
```

mutate
========================================================

```{r}
flights %>%
  mutate(
    gain = arr_delay - dep_delay
  , speed = distance / air_time * 60
  , gain_per_hour = gain / (air_time / 60)
  ) %>% 
  select(dep_delay, arr_delay, gain, distance, distance, air_time, speed, gain_per_hour)
```

group_by / summarise - 1
========================================================

```{r}
flights %>%
  group_by(origin) %>%
  summarise(
    n = n()
    , avg_delay = mean(dep_delay, na.rm = TRUE)
  )
```


summarise
========================================================

```{r}
flights %>%
  summarise(
    n = n()
    , destinations = n_distinct(dest)
    , avg_delay = mean(dep_delay, na.rm = TRUE)
  )
```

group_by / summarise - 2
========================================================

```{r}
flights %>%
  group_by(origin) %>%
  summarise(
      destinations = n_distinct(dest)
    , avg_distance = mean(distance, na.rm = TRUE)
  )
```

group_by / summarise - 3
========================================================

What is the farthest flight to leave NYC?

```{r}
flights %>%
  group_by(origin, dest) %>%
  summarise(
      n = n()
    , min = min(distance)
    , max = max(distance)
    , median = median(distance)
  ) %>%
  arrange(desc(median))
```

ggplot2
========================================================

- [Grammar of Graphics](https://www.amazon.com/Grammar-Graphics-Statistics-Computing/dp/0387245448) : abstraction of how to build visual stories with data
- Forget powerpoint or excel

ggplot2 Examples - 1
========================================================

<center>![baseball](./viz/ggplot2_2.png)<center>

ggplot2 Examples - 2
========================================================

<center>![ROC](./viz/ggplot2_4.png)<center>

ggplot2 Examples - 3
========================================================

<center>![distributions](./viz/ggplot2_8.png)<center>

ggplot2 Examples - 4
========================================================

<center>![spine](./viz/ggplot2_10.png)<center>

ggplot2 Examples - 5
========================================================

<center>![LASSO](./viz/ggplot2_11.png)<center>

Basic Structure
========================================================

`ggplot(data, aes(x = *, y = *)) + geom_***`

```{r}
ggplot(data = mtcars, mapping = aes(x = hp, y = mpg)) +
  geom_point()
```

Common Aesethics
========================================================

- x
- y
- colour
- fill
- alpha
- size
- shape

Common Geoms
========================================================

- geom_point
- geom_bar
- geom_boxplot
- geom_histogram
- geom_line
- geom_smooth

See documentation ([docs.ggplot2.org/current](http://docs.ggplot2.org/current)) for more

geom_bar
========================================================

```{r}
ggplot(diamonds, aes(x = cut)) +
  geom_bar()
```
geom_point with colour
========================================================

```{r}
ggplot(diamonds, aes(x = carat, y = price, colour = cut)) +
  geom_point() +
  labs(title = "Diamonds Dataset", subtitle = "Carat vs Price")
```

Example EDA
====================================
type: sub-section

1. Data Integrity Checks
2. Intricate Questions

Look at the Data
====================================

```{r}
flights
```

Data has **`r nrow(flights)`** rows and **`r ncol(flights)`** columns using:

`` `r '\x60r nrow(flights)\x60'` `` and `` `r '\x60r ncol(flights)\x60'` ``

Missing Values
====================================

```{r}
flights %>%
  filter(!complete.cases(.))
```

```{r}
sapply(flights, function(x) sum(is.na(x))) 
```

Summary of Columns
====================================

```{r}
flights %>%
  select(1:10) %>%
  summary
```

Unusual Values
====================================

```{r}
ggplot(flights, aes(x = air_time)) +
  geom_histogram()
```

Gapminder Dataset
====================================

```{r}
library(gapminder)
gapminder
```

Data Integrity - 1
====================================

Check for missing data

```{r}
gapminder %>%
  filter(!complete.cases(.))
```


Data Integrity - 2
====================================

Do all the countries have the same number of years?

```{r}
gapminder %>% 
  group_by(country) %>% 
  summarise(years_per_country = n()) %>%
  group_by(years_per_country) %>%
  summarise(countries = n())
```

Data Integrity - 3
====================================

What years are included in the dataset?

```{r}
gapminder %>%
  distinct(year)
```

Data Integrity - 4
====================================

```{r}
  gapminder %>%
    group_by(continent) %>%
    summarize(n_obs = n(), n_countries = n_distinct(country)) %>%
    mutate(years = n_obs / n_countries)
```


Data Integrity - 5
====================================

What is the median life expectancy for each continent in 2007 (last year)?

```{r}
gapminder %>%
  filter(year == 2007) %>%
  group_by(continent) %>%
  summarise(lifeExp = median(lifeExp))
```

Data Integrity - 6
====================================

Basic summary

```{r}
gapminder %>%
  summary()
```

Plots by Data Types
===

|Data|Plots|
|----|---|
|One Continuous|Histogram|
|One Continuous + One Categorial|Boxplot|
|Two Continuous|Scatter Plot|
|Three Continuous|Scatter Plot + Size|
|Two Continuous + One Categorial|Scatter Plot + Color|
|Catgorial with *reasonable number of levels*|Faceting!!|

Note: Time is always the x-axis.

One Continous
===

<p class = "question_master">What is the distribution of life expectacy in 2007?</p>

```{r}
gapminder %>%
  filter(year == 2007) %>%
  ggplot(aes(x = lifeExp)) +
  geom_histogram(binwidth = 2)
```


One Continuous + One Categorial
===

<p class = "question_master">What is the distribution of life expectacy in 2007 by continent?</p>

```{r}
gapminder %>%
  filter(year == 2007) %>%
  ggplot(aes(x = continent, y = lifeExp)) +
  geom_boxplot()
```

Who are the Outliers?
===

```{r}
gapminder %>%
  filter(year == 2007 & continent %in% c("Americas","Asia")) %>%
  group_by(continent) %>%
  filter(rank(lifeExp) == 1)
```

Two Continuous
===

<p class = "question_master">What is the relationship between GDP per capita and life expectacy?</p>

```{r}
gapminder %>%
  ggplot(aes(x = gdpPercap, y = lifeExp)) + 
  geom_point()
```

Let's log that!!
===

<p class = "question_master">Relationship is clearer</p>

```{r}
gapminder %>%
  ggplot(aes(x = gdpPercap, y = lifeExp)) + 
  geom_point() +
  scale_x_log10()
```

Two Continuous + One Categorial (few)
===

<p class = "question_master">What is the relationship between GDP per capita and life expectacy by continent?</p>

```{r}
gapminder %>%
  ggplot(aes(x = gdpPercap, y = lifeExp, colour = continent)) + 
  geom_point() +
  scale_x_log10()
```

Two Continuous + One Categorial (many)
===

<p class = "question_master">What is the relationship between GDP per capita and life expectacy over time?</p>

```{r}
gapminder %>%
  ggplot(aes(x = gdpPercap, y = lifeExp, colour = year)) + 
  geom_point() +
  scale_x_log10()
```

Three Continuous
===

<p class = "question_master">What is the relationship between GDP per capita, life expectacy, and population in 2007?</p>

```{r}
gapminder %>%
  filter(year == 2007) %>%
  ggplot(aes(x = gdpPercap, y = lifeExp, size = pop)) + 
  geom_point() +
  scale_x_log10()
```

Let's Facet!
===

<center>![facet](http://media2.giphy.com/media/HUlrpol0gn6i4/giphy.gif)</center>

Variation - 1
===

<p class = "question_master">What does the distribution of life expectacy look like by continent?</p>

```{r}
gapminder %>%
  ggplot(aes(x = year, y = lifeExp, colour = continent)) +
  geom_point() # position = 'jitter'
```

Variation - 2
===

<p class = "question_master">What does the distribution of life expectacy look like by continent?</p>

```{r}
gapminder %>%
  ggplot(aes(x = year, y = lifeExp)) +
  geom_point() +
  geom_smooth(method = 'loess', se = FALSE) + 
  facet_wrap(~ continent)
```

Data Integrity (again)
===

<p class = "question_master">Who is Oceania?</p>

```{r}
gapminder %>%
  filter(continent == "Oceania") %>%
  distinct(country)
```

Data Integrity (again)
===

<p class = "question_master">What if we included them as Asia?</p>

```{r}
gapminder %>%
  mutate(continent = forcats::fct_recode(continent, Asia = "Oceania")) %>%
  ggplot(aes(x = year, y = lifeExp)) +
  geom_point() +
  geom_smooth(method = 'loess', se = FALSE) + 
  facet_wrap(~ continent)
```

One Continous + Two Categorial
===

<p class = "question_master">What if we wanted line charts instead?</p>

```{r}
gapminder %>%
  ggplot(aes(x = year, y = lifeExp)) +
  geom_point(alpha = 2/3) +
  geom_line(aes(group = country), alpha = 1/3) +
  geom_smooth(method = 'loess', se = FALSE) + 
  facet_wrap(~ continent)
```

One Continous + One Categorial (rather than boxplot)
===

<p class = "question_master">What is the distribution of life expectacy (in 2007) by continent?</p>

```{r}
gapminder %>%
  filter(year == 2007) %>%
  ggplot(aes(x = lifeExp)) +
  geom_histogram(binwidth = 2) +
  facet_wrap(~ continent)
```

Two Continous + Two Categorial
===

What is the relationship between GDP per capita and life expectancy across continents and time?

```{r}
gapminder %>%
  ggplot(aes(x = gdpPercap, y = lifeExp, colour = continent, alpha = year)) + 
  geom_point() + 
  scale_x_log10()
```

Add in Regression Line
===

```{r}
gapminder %>%
  ggplot(aes(x = gdpPercap, y = lifeExp, colour = continent)) + 
  geom_point(aes(alpha = year)) + 
  geom_smooth(method = 'lm', se = FALSE) + 
  scale_x_log10()
```

Linear Model for Each Year and Continent

```{r}
gapminder %>%
  filter(country != "Kuwait") %>%
  ggplot(aes(x = gdpPercap, y = lifeExp, colour = continent)) + 
  geom_point() + 
  geom_smooth(method = 'lm', se = FALSE) + 
  facet_wrap(~ year) + 
  scale_x_log10()
```

Particular Observations
===

Are there any trends in particular countries over time?

```{r}
gapminder %>%
  filter(country %in% c("Canada", "Rwanda", "Cambodia", "Mexico", "Zimbabwe")) %>%
  ggplot(aes(x = year, y = lifeExp, colour = country)) + 
  geom_point() + 
  geom_line() +
  labs(title = "Sad Evidence of Human Conflict")
```

Let's end on a positive note
===

How is the distribution of life expecteny evolving over time?

```{r}
gapminder %>%
  ggplot(aes(x = factor(year), y = lifeExp)) +
  geom_boxplot() +
  labs(x = "year")
```

References
========================================================
type: sub-section

[R for Data Science](http://r4ds.had.co.nz/exploratory-data-analysis.html)

[dplyr tutorial](https://cran.rstudio.com/web/packages/dplyr/vignettes/introduction.html)

[gapminder ggplot tutorial](https://github.com/jennybc/ggplot2-tutorial/blob/master/gapminder-ggplot2-scatterplot.md)
